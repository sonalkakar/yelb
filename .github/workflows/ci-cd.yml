name: Deploy Local Docker Host
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted # Ensure this job runs on your self-hosted runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    #- name: Navigate to Docker Compose Directory
      #run: cd /path/to/your/docker-compose/directory # Replace with the actual path

    - name: Stop Existing Containers (if any)
      run: docker-compose down

    - name: Pull Latest Images
      run: docker-compose pull

    - name: Install Docker Scout CLI
      run: |
          curl -sSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh
          sudo mv ~/.docker/cli-plugins/docker-scout /usr/local/bin/

    - name: Scan Application Image 1
      run: docker scout cves mreferre/yelb-ui:0.10:latest  # Replace with your actual image name and tag
    - name: Analyze Scout Results and Fail on High/Critical (Example for one image)
      run: |
          HIGH_COUNT=$(docker scout cves mreferre/yelb-ui:0.10:latest --severity high | grep -c "HIGH")
          CRITICAL_COUNT=$(docker scout cves mreferre/yelb-ui:0.10:latest  --severity critical | grep -c "CRITICAL")

          echo "High severity vulnerabilities found in UI application: $HIGH_COUNT"
          echo "Critical severity vulnerabilities found in UI Application: $CRITICAL_COUNT"
          if [ "$HIGH_COUNT" -gt 0 ] || [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "High or critical vulnerabilities found."ulnerabilitie forund"
            
    - name: Start Containers
      run: docker-compose up -d

    - name: Deployment successful
      run: echo "Application deployed successfully on the local Docker host!"
      #
